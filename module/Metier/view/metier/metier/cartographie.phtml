<?php

/**
 * @see \Metier\Controller\MetierController::cartographieAction()
 * @var array $results
 */

use Metier\Provider\Privilege\MetierPrivileges;

$canCarto = $this->isAllowed(MetierPrivileges::getResourceId(MetierPrivileges::METIER_CARTOGRAPHIE));
$this->headTitle('Cartographie des métiers');
?>

<h1 class="page-header"> Cartographie des métiers </h1>

<div class="main">

    <div class="row">

        <div class="col-md-5" >
            <?php if ($canCarto) : ?>
                <span class="export btn btn-primary action" id="cartographie">
                    <span class="icon icon-csv"></span> Télécharger la cartographie
                </span>
            <?php endif ; ?>
        </div>

        <div class="col-md-5 pull-right">
        <div class="alert alert-warning">
            <strong>Attention :</strong> La cartographie se base sur les métiers. Par conséquent, une fonction  (resp. un domaine ou une famille) vide ne sera pas cartographié.
        </div>
        </div>

    </div>

    <table class="datatable table table-condensed" id="cartographie">
        <thead>
            <tr>
                <th> Métier </th>
                <th> Niveau </th>
                <th> Références </th>
                <th> Domaine </th>
                <th> Fonction </th>
                <th> Famille professionnelle </th>
                <th> #Fiche métier</th>
<!--                <th> #Fiche poste </th>-->
            </tr>
        </thead>
        <tbody>
            <?php foreach($results as $result) : ?>


            <tr>
                <td> <?php echo $result['metier']; ?> </td>
                <td> <?php echo $result['niveau']; ?> </td>
                <td> <?php echo $result['références']; ?> </td>
                <td> <?php echo $result['domaine']; ?> </td>
                <td> <?php echo $result['fonction']; ?> </td>
                <td> <?php echo $result['famille']; ?> </td>
                <td> <?php echo $result['nbFiche']; ?> </td>
            </tr>
            <?php endforeach; ?>
        </tbody>
    </table>
</div>

<script>
    $(document).ready(function() {
        $('table#cartographie').dataTable({
            info: false,
            autoWidth: false,
            language: {
                "url": "/js/datatables_fr.json",
            },
        });
    } );

    downloadCSVFromJson = (filename, arrayOfJson) => {
        // convert JSON to CSV
        const replacer = (key, value) => value === null ? '-' : value
        const header = Object.keys(arrayOfJson[0])
        let csv = arrayOfJson.map(row => header.map(fieldName =>
            JSON.stringify(row[fieldName], replacer)).join(';'))
        csv.unshift(header.join(';'))
        csv = csv.join('\r\n')

        // Create link and download
        var link = document.createElement('a');
        link.setAttribute('href', 'data:text/csv;charset=utf-8,%EF%BB%BF' + encodeURIComponent(csv));
        link.setAttribute('download', filename);
        link.style.visibility = 'hidden';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    };

    $('span.export#cartographie').on('click', function() {
        let tableau = <?php echo json_encode($results); ?>;
        downloadCSVFromJson('cartographie_'+ Date.now().toString() +'.csv', tableau);
    });

</script>

<style>
    span.export {
        cursor: pointer;
        width: 20rem:;
    }
</style>
