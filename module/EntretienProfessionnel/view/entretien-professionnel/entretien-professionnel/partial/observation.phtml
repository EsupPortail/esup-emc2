<?php

/**
 * @var EntretienProfessionnel $entretien
 * @var Observation $observation
 * @var string $source
 */

use EntretienProfessionnel\Entity\Db\EntretienProfessionnel;
use EntretienProfessionnel\Entity\Db\Observation;
use EntretienProfessionnel\Provider\Privilege\EntretienproPrivileges;
use EntretienProfessionnel\Provider\Privilege\ObservationPrivileges;
use EntretienProfessionnel\Provider\Validation\EntretienProfessionnelValidations;

$canAfficherObservation = $this->isAllowed(ObservationPrivileges::getResourceId(ObservationPrivileges::OBSERVATION_AFFICHER));
$canAjouterObservation = $this->isAllowed(ObservationPrivileges::getResourceId(ObservationPrivileges::OBSERVATION_AJOUTER));
$canModifierObservation = $this->isAllowed(ObservationPrivileges::getResourceId(ObservationPrivileges::OBSERVATION_MODIFIER));
$canHistoriserObservation = $this->isAllowed(ObservationPrivileges::getResourceId(ObservationPrivileges::OBSERVATION_HISTORISER));
$canDetruireObservation = $this->isAllowed(ObservationPrivileges::getResourceId(ObservationPrivileges::OBSERVATION_SUPPRIMER));

$validationObservation  = $entretien->getValidationByType(EntretienProfessionnelValidations::VALIDATION_OBSERVATION);
$canValiderObservation  = $this->isAllowed($entretien, EntretienproPrivileges::ENTRETIENPRO_VALIDER_OBSERVATION);

$now = new DateTime();
$date = $entretien->getMaxSaisiObservation();

$date_non_depassee = ($date !== null AND $date >= $now);
$validationResponsable = $entretien->getValidationByType(EntretienProfessionnelValidations::VALIDATION_RESPONSABLE);
$validationHierarchie = $entretien->getValidationByType(EntretienProfessionnelValidations::VALIDATION_DRH);
?>

<!-- Observation de l'agent : CONTROLE -------------------------------------------------------------------------------->

<div class="row">
    <div class="col-md-9">
        <?php if($observation !== null) : ?>
            Observations faites
            par <?php echo ($observation->getHistoModificateur())?$observation->getHistoModificateur()->getDisplayName():$observation->getHistoCreateur()->getDisplayName(); ?>
            le <?php echo ($observation->getHistoModification())?$observation->getHistoModification()->format('d/m/Y à H:i'):$observation->getHistoCreation()->format('d/m/Y à H:i'); ?> <br/><br/>
            <dl>
            <?php if ($observation->getObservationAgentEntretien() !== null) : ?>
                <dt>Observations sur l'entretien</dt>
                <dd><?php echo $observation->getObservationAgentEntretien(); ?></dd>
            <?php endif; ?>
            <?php if ($observation->getObservationAgentPerspective() !== null) : ?>
                <dt>Observations sur les perspectives</dt>
                <dd><?php echo $observation->getObservationAgentPerspective(); ?></dd>
            <?php endif; ?>
            </dl>
        <?php endif; ?>
    </div>
    <div class="col-md-3">
        <?php if($observation !== null) : ?>
            <?php if ($validationResponsable !== null AND $validationHierarchie === null AND $date_non_depassee) :?>
                <?php if ($canModifierObservation) : ?>
                    <a
                        <?php /** @see \EntretienProfessionnel\Controller\ObservationController::modifierAction() */ ?>
                            href="<?php echo $this->url('entretien-professionnel/observation/modifier', ['observation' => $observation->getId()], [], true); ?>"
                            class="btn btn-primary action ajax-modal" data-event="modification"
                    >
                        <span class="icon icon-editer"> Modifier les observations </span>
                    </a>
                <?php endif; ?>
                <?php if ($canHistoriserObservation) : ?>
                    <a
                        <?php /** @see \EntretienProfessionnel\Controller\ObservationController::historiserAction() */ ?>
                            href="<?php echo $this->url('entretien-professionnel/observation/historiser', ['observation' => $observation->getId()], [], true); ?>"
                            class="btn btn-primary action ajax-modal" data-event="modification"
                    >
                        <span class="icon icon-historiser"> Supprimer les observations </span>
                    </a>
                <?php endif; ?>
                <?php if ($canDetruireObservation) : ?>
                    <a
                        <?php /** @see \EntretienProfessionnel\Controller\ObservationController::supprimerAction() */ ?>
                            href="<?php echo $this->url('entretien-professionnel/observation/supprimer', ['observation' => $observation->getId()], [], true); ?>"
                            class="btn btn-primary ajax-modal" data-event="modification"
                    >
                        <span class="icon icon-unchecked"> </span> Détruire les observations
                    </a>
                <?php endif; ?>
            <?php endif; ?>
        <?php else : ?>
            <?php if ($validationResponsable !== null AND $validationObservation === null AND $canModifierObservation AND $date_non_depassee) : ?>
                <a
                    <?php /** @see \EntretienProfessionnel\Controller\ObservationController::ajouterAction() */ ?>
                        href="<?php echo $this->url('entretien-professionnel/observation/ajouter', ['entretien-professionnel' => $entretien->getId()], [], true); ?>"
                        class="btn btn-primary action ajax-modal" data-event="modification"
                >
                    <span class="icon icon-ajouter"> Ajouter une observation </span>
                </a>
            <?php endif; ?>
        <?php endif; ?>
    </div>
</div>
