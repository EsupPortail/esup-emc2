<?php

/**
 * @var EntretienProfessionnel $entretien
 * @var FichePoste $fichePoste
 * @var User $connectedUser
 * @var string $source
 */

use Application\Entity\Db\FichePoste;
use EntretienProfessionnel\Entity\Db\EntretienProfessionnel;
use EntretienProfessionnel\Provider\Privilege\EntretienproPrivileges;
use EntretienProfessionnel\Provider\Validation\EntretienProfessionnelValidations;
use UnicaenUtilisateur\Entity\Db\User;

$canAfficherEntretien = $this->isAllowed($entretien, EntretienproPrivileges::ENTRETIENPRO_AFFICHER);
$canRenseigner = $this->isAllowed($entretien, EntretienproPrivileges::ENTRETIENPRO_RENSEIGNER);

$retour = $this->url('entretien-professionnel/acceder', ['entretien' => $entretien->getId()], ['force_canonical' => false], true);

$now = new DateTime();
$date = $entretien->getMaxSaisiEntretien();

$validationResponsable = $entretien->getValidationActiveByTypeCode(EntretienProfessionnelValidations::VALIDATION_RESPONSABLE);

$isAgent = $entretien->getAgent()->getUtilisateur() === $connectedUser;
$date_depassee = (($isAgent) AND ($now > $date));

?>

<h2 class="page-header-tab"> Compte-rendu d'entretien professionnel </h2>

<!-- Formulaire de l'agent : WARNING ---------------------------------------------------------------------------------->

    <h3 class="categorie"> Missions du poste </h3>

    <?php if ($fichePoste !== null) : ?>
        <ul>
            <?php foreach ($fichePoste->getFichesMetiers() as $ficheTypeExterne) : ?>
                <li> <?php echo $ficheTypeExterne->getFicheType()->getMetier()->getLibelle(); ?>
                    <?php echo $ficheTypeExterne->getFicheType()->getActivitesFromFicheMetierAsText(); ?>
                </li>
            <?php endforeach; ?>
        </ul>
    <?php endif; ?>

    <br/>
    <br/>

    <?php
    $instance = $entretien->getFormulaireInstance();
    $formulaire = $instance->getFormulaire();
    $data = $instance->buildResponseDictionnary();
    ?>


    <?php if ($canRenseigner) : ?>
        <?php if (!$date_depassee  AND ($validationResponsable === null OR $validationResponsable->estHistorise())) : ?>
            <?php
                /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::accederAction(); */
                $retour = $this->url('entretien-professionnel/acceder', ['entretien' => $entretien->getId()], ['force_canonical' => false], true);
                /** @see  \UnicaenAutoform\Controller\FormulaireController::afficherFormulaireAction() */
                $url = $this->url('autoform/formulaire/afficher-formulaire', ['formulaire' => $formulaire->getId(), 'instance' => $instance->getId()], ['query' => ['retour' => $retour], 'force_canonical' => false], true);

                echo $this->instanceAsFormulaire()->render($instance, $url, $data);
            ?>
        <?php else : ?>
            <?php echo $this->instanceAsText()->render($instance); ?>
        <?php endif; ?>
    <?php else : ?>
        <?php if ($canAfficherEntretien) : ?>
            <?php echo $this->instanceAsText()->render($instance); ?>
        <?php else : ?>
            <div class="alert alert-danger">
                Vous ne pouvez pas saisir le formulaire d'entretien professionnel.
            </div>
        <?php endif; ?>
    <?php endif; ?>
