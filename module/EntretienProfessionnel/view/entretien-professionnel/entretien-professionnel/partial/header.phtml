    <?php

/**
 * @var EntretienProfessionnel $entretien
 * @var Agent $agent
 * @var FichePoste $ficheposte
 * @var FicheMetier[] $fichesmetiers
 * @var string[] $documents
 * @var Observateur[] $observateurs
 */

use Application\Entity\Db\Agent;
    use EntretienProfessionnel\Entity\Db\Observateur;
    use EntretienProfessionnel\Provider\Privilege\ObservateurPrivileges;
    use FicheMetier\Entity\Db\FicheMetier;
use Application\Entity\Db\FichePoste;
use EntretienProfessionnel\Entity\Db\EntretienProfessionnel;
use EntretienProfessionnel\Provider\Privilege\EntretienproPrivileges;
    use EntretienProfessionnel\Provider\Validation\EntretienProfessionnelValidations;
    use Structure\Entity\Db\Structure;
use Structure\Provider\Privilege\StructurePrivileges;

$canAfficherInformationMetier = (
        $this->isAllowed(EntretienproPrivileges::getResourceId(EntretienproPrivileges::ENTRETIENPRO_VALIDER_RESPONSABLE))
        OR
        $this->isAllowed(EntretienproPrivileges::getResourceId(EntretienproPrivileges::ENTRETIENPRO_VALIDER_DRH))
);

//TODO MODIFIER AVEC ASSERTION
$canAfficherObservateurs = $this->isAllowed(ObservateurPrivileges::getResourceId(ObservateurPrivileges::OBSERVATEUR_AFFICHER));
$canAjouterObservateurs = $this->isAllowed(ObservateurPrivileges::getResourceId(ObservateurPrivileges::OBSERVATEUR_AJOUTER));
$canModifierObservateurs = $this->isAllowed(ObservateurPrivileges::getResourceId(ObservateurPrivileges::OBSERVATEUR_MODIFIER));
$canHistoriserObservateurs = $this->isAllowed(ObservateurPrivileges::getResourceId(ObservateurPrivileges::OBSERVATEUR_HISTORISER));
$canSupprimerObservateurs = $this->isAllowed(ObservateurPrivileges::getResourceId(ObservateurPrivileges::OBSERVATEUR_SUPPRIMER));
?>

<div class="row">
    <div class="col-md-6">

        <!-- AGENT ---------------------------------------------------------------------------------------------------->
        <div class="card">
            <div class="card-header bg-default">
                À propos de l'agent
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-md-4"> Fiche de l'agent </dt>
                    <dd class="col-md-8">
                        <a
                            <?php /** @see \Application\Controller\AgentController::afficherAction() */ ?>
                            href="<?php echo $this->url('agent/afficher', ['agent' => $agent->getId()], [], true); ?>"
                            target="_blank"
                        >
                            <?php echo $agent->getDenomination(); ?>
                        </a>
                    </dd>
                    <?php if ($canAfficherInformationMetier) : ?>

                        <dt class="col-md-4"> Fiche(s) de poste</dt>
                        <dd class="col-md-8">
                            <?php if ($ficheposte !== null) : ?>
                                <?php $libelle = $ficheposte->getLibelle()??$ficheposte->getLibelleMetierPrincipal(); ?>
                                <?php if ($libelle === null) $libelle='Aucun libellé de trouvé';  ?>
                                <a
                                    <?php /** @see \Application\Controller\FichePosteController::afficherAction() */ ?>
                                    href="<?php echo $this->url('fiche-poste/afficher', ['fiche-poste' => $ficheposte->getId()], [], true); ?>"
                                    target="_blank"
                                >
                                    <?php echo $libelle; ?> <br>
                                    Fiche de poste #<?php echo $ficheposte->getId();?>
                                </a>
                            <?php else : ?>
                                <span style="color: darkred;"><span class="icon icon-attention"></span> Aucune fiche de poste</span>
                            <?php endif; ?>
                        </dd>
                        <dt class="col-md-4"> Fiche(s) métier(s)</dt>
                        <dd class="col-md-8">
                            <?php if (!empty($fichesmetiers)) : ?>
                                <?php $first = true; foreach ($fichesmetiers as $fichemetier) : ?>
                                    <?php if ($first) $first=false; else echo '<br/>'; ?>
                                    <a
                                        <?php /** @see \Application\Controller\FicheMetierController::afficherAction() */ ?>
                                        href="<?php echo $this->url('fiche-metier/afficher', ['fiche-metier' => $fichemetier->getId()], [], true); ?>"
                                        target="_blank"
                                    >
                                        <?php
                                            $libelle = "Fiche metier #".$fichemetier->getId();
                                            if ($fichemetier->getMetier()) $libelle = $fichemetier->getMetier()->getLibelle();
                                        ?>
                                        <?php echo $libelle; ?>
                                    </a>
                                <?php endforeach; ?>
                            <?php else : ?>
                                <span style="color: darkred;"><span class="icon icon-attention"></span> Aucune fiche métier </span>
                            <?php endif; ?>
                        </dd>

                    <?php endif; ?>

                    <dt class="col-md-4"> Structure(s) </dt>
                    <dd class="col-md-8">
                        <?php
                            $structures = [];
                            foreach ($agent->getAffectationsActifs() as $affectation) {
                                $structure = $affectation->getStructure();
                                $structures[$structure->getId()] = $structure;
                            }
                            usort($structures, function (Structure $a, Structure $b) { return ($a->getLibelleCourt() .' '. $a->getLibelleLong()) < ($b->getLibelleCourt() .' '. $b->getLibelleLong());});
                        ?>
                        <?php foreach ($structures as $structure) : ?>

                            <?php
                                $structureLibelle = "[" .$structure->getLibelleCourt(). "] ". $structure->getLibelleLong();
                                $structureUrl = $this->url("structure/description", ['structure' => $structure->getId()], [], true);
                                $canAfficherStructure = $this->isAllowed($structure, StructurePrivileges::STRUCTURE_AFFICHER);
                            ?>
                                <?php if ($canAfficherStructure) : ?>
                                    <a href="<?php echo $structureUrl; ?>" target="_blank" title="Affichage de la structure" data-bs-toggle="tooltip" data-bs-html="true">
                                        <?php echo $structureLibelle; ?>
                                    </a>
                                <?php else : ?>
                                    <?php echo $structureLibelle; ?>
                                <?php endif; ?>
                        <?php endforeach; ?>
                        <br/>
                    </dd>
                </dl>
            </div>
        </div>


    </div>
    <div class="col-md-6">

        <!-- LIENS ---------------------------------------------------------------------------------------------------->
        <div class="card">
            <div class="card-header bg-default">
                Documents utiles
            </div>
            <div class="card-body">
                <ul>
                    <?php foreach ($documents as $document) : ?>
                        <li> <?php echo $document; ?></li>
                    <?php endforeach; ?>
                </ul>
            </div>
        </div>

        <!-- Observateurs --------->
        <?php if ($canAfficherObservateurs) : ?>
        <div class="card">
            <div class="card-header bg-default">
                Observateurs
            </div>
            <div class="card-body">
                <?php if ($canAjouterObservateurs) : ?>
                    <?php /** @see \EntretienProfessionnel\Controller\ObservateurController::ajouterAction() */ ?>
                    <a href="<?php echo $this->url('entretien-professionnel/observateur/ajouter', ['entretien-professionnel' => $entretien->getId()], [], true); ?>"
                       class="btn btn-primary ajax-modal" data-event="modification">
                        <span class="icon icon-ajouter"></span>
                        Ajouter un observateur
                    </a>
                <?php endif; ?>
                <ul>
                    <?php if (empty($observateurs)) : ?>
                        Aucun·e observateur·trice
                    <?php else : ?>
                        <?php foreach ($observateurs as $observateur) : ?>
                            <li>
                                <?php echo $observateur->getUser()->getDisplayName() ?>
                                <?php if ($observateur->getDescription()): ?>
                                    <span class="icon icon-information" title="<?php echo $observateur->getDescription(); ?>"
                                          data-bs-toggle="tooltip" data-bs-html="true">
                                    </span>
                                <?php endif; ?>
                                <?php if ($canModifierObservateurs) : ?>
                                    <?php /** @see \EntretienProfessionnel\Controller\ObservateurController::modifierAction() */ ?>
                                    <a href="<?php echo $this->url('entretien-professionnel/observateur/modifier', ['observateur' => $observateur->getId()], [], true); ?>"
                                        title="Modifier l'observateur·trice" class="ajax-modal" data-event="modification" data-bs-toggle="tooltip" data-bs-html="true"
                                    >
                                        <span class="icon icon-editer" ></span></a>
                                <?php endif; ?>
                                <?php if ($canHistoriserObservateurs) : ?>
                                    <?php if ($observateur->estNonHistorise()) : ?>
                                        <?php /** @see \EntretienProfessionnel\Controller\ObservateurController::historiserAction() */ ?>
                                        <a href="<?php echo $this->url('entretien-professionnel/observateur/historiser', ['observateur' => $observateur->getId()], [], true); ?>"
                                           title="Historiser l'observateur·trice" data-bs-toggle="tooltip" data-bs-html="true"
                                        >
                                            <span class="icon icon-historiser" ></span></a>
                                    <?php else : ?>
                                        <?php /** @see \EntretienProfessionnel\Controller\ObservateurController::restaurerAction() */ ?>
                                        <a href="<?php echo $this->url('entretien-professionnel/observateur/restaurer', ['observateur' => $observateur->getId()], [], true); ?>"
                                           title="Restaurer l'observateur·trice" data-bs-toggle="tooltip" data-bs-html="true"
                                        >
                                            <span class="icon icon-restaurer" ></span></a>
                                    <?php endif; ?>
                                <?php endif; ?>
                                <?php if ($canSupprimerObservateurs) : ?>
                                    <?php /** @see \EntretienProfessionnel\Controller\ObservateurController::supprimerAction() */ ?>
                                    <a href="<?php echo $this->url('entretien-professionnel/observateur/supprimer', ['observateur' => $observateur->getId()], [], true); ?>"
                                       title="Supprimer l'observateur·trice" class="ajax-modal" data-event="modification" data-bs-toggle="tooltip" data-bs-html="true"
                                    >
                                        <span class="icon icon-unchecked text-danger" ></span></a>
                                <?php endif; ?>
                            </li>
                        <?php endforeach; ?>
                    <?php endif; ?>
                </ul>
            </div>
        </div>
        <?php endif; ?>
    </div>
</div>

<div class="row">
    <div class="col-md-6">

        <!-- INFORMATIONS --------------------------------------------------------------------------------------------->
        <div class="card">
            <div class="card-header bg-default">
                Informations complémentaires
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-md-4"> Responsable </dt>
                    <dd class="col-md-8"> <?php echo $entretien->getResponsable()->getDenomination(); ?> </dd>
                    <?php if ($entretien->getCampagne()) : ?>
                        <dt class="col-md-4"> Année </dt>
                        <dd class="col-md-8"> <?php echo $entretien->getCampagne()->getAnnee(); ?> </dd>
                    <?php endif; ?>
                    <dt class="col-md-4"> Date </dt>
                    <dd class="col-md-8"> <?php echo $entretien->getDateEntretien()->format('d/m/Y à H:i'); ?> </dd>
                    <dt class="col-md-4"> Lieu </dt>
                    <dd class="col-md-8"> <?php echo $entretien->getLieu(); ?> </dd>
                    <dt class="col-md-4"> État </dt>
                    <dd class="col-md-8">
                        <?php echo $this->etatinstance($entretien->getEtatActif()); ?>
                    </dd>
                </dl>
            </div>
        </div>
    </div>

    <!-- VALIDATIONS -------------------------------------------------------------------------------------------------->
    <div class="col-md-6">
        <div class="card">
            <div class="card-header bg-default">
                Validation de l'entretien
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-md-5">Confirmation</dt>
                    <dd class="col-md-7"><?php echo ($entretien->getToken() === null) ? '<span class="icon icon-checked" style="color:darkgreen;"></span>' : '<span class="icon sursis" title="Non effectuée"></span> Non effectuée'; ?> </dd>
                    <dt class="col-md-5">Responsable d'entretien </dt>
                    <dd class="col-md-7">
                        <?php $validationResponsable = $entretien->getValidationActiveByTypeCode(EntretienProfessionnelValidations::VALIDATION_RESPONSABLE); ?>
                        <?php if ($validationResponsable !== null) : ?>
                            <div>
                                <div style="display: inline-block; vertical-align: top;">
                                    <span class="icon icon-checked" style="color:darkgreen;"></span>
                                </div>
                                <div style="display: inline-block;">
                                    <?php echo $validationResponsable->getHistoModificateur()->getDisplayName(); ?>
                                    <br/><?php echo $validationResponsable->getHistoModification()->format("d/m/Y à H:i"); ?>
                                </div>
                            </div>
                        <?php else : ?>
                            <span class="icon sursis" title="Non effectuée"></span> Non effectuée
                        <?php endif; ?>
                    </dd>
                    <dt class="col-md-5">Autorité hiérachique </dt>
                    <dd class="col-md-7">
                        <?php $validationHierarchie = $entretien->getValidationActiveByTypeCode(EntretienProfessionnelValidations::VALIDATION_DRH); ?>
                        <?php if ($validationHierarchie !== null) : ?>
                            <div style="display: inline-block; vertical-align: top;">
                                <span class="icon icon-checked" style="color:darkgreen;"></span>
                            </div>
                            <div style="display: inline-block;">
                                <?php echo $validationHierarchie->getHistoModificateur()->getDisplayName(); ?>
                                <br/><?php echo $validationHierarchie->getHistoModification()->format("d/m/Y à H:i"); ?>
                            </div>
                        <?php else : ?>
                            <span class="icon sursis" title="Non effectuée"></span> Non effectuée
                        <?php endif; ?>
                    </dd>
                    <dt class="col-md-5">Agent </dt>
                    <dd class="col-md-7">
                        <?php $validationAgent = $entretien->getValidationActiveByTypeCode(EntretienProfessionnelValidations::VALIDATION_AGENT); ?>
                        <?php if ($validationAgent !== null) : ?>
                            <div style="display: inline-block; vertical-align: top;">
                                <span class="icon icon-checked" style="color:darkgreen;"></span>
                            </div>
                            <div style="display: inline-block;">
                                <?php echo $validationAgent->getHistoModificateur()->getDisplayName(); ?>
                                <br/>
                                <?php echo $validationAgent->getHistoModification()->format("d/m/Y à H:i"); ?>
                            </div>
                        <?php else : ?>
                            <span class="icon sursis" title="Non effectuée"></span> Non effectuée
                        <?php endif; ?>
                    </dd>
                </dl>
            </div>
        </div>
    </div>
</div>