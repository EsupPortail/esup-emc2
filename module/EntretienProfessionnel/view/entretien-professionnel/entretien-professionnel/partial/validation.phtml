<?php

/**
 * @var EntretienProfessionnel $entretien
 */

use EntretienProfessionnel\Entity\Db\EntretienProfessionnel;
use EntretienProfessionnel\Entity\Db\EntretienProfessionnelConstant;
use EntretienProfessionnel\Provider\Privilege\EntretienproPrivileges;

$canValiderAgent        = $this->isAllowed($entretien, EntretienproPrivileges::ENTRETIENPRO_VALIDER_AGENT);
$canValiderResponsable  = $this->isAllowed($entretien, EntretienproPrivileges::ENTRETIENPRO_VALIDER_RESPONSABLE);
$canValiderDrh          = $this->isAllowed($entretien, EntretienproPrivileges::ENTRETIENPRO_VALIDER_DRH);

$now = new DateTime();
$dateOk = ($now > $entretien->getDateEntretien());
$validationResponsable      = $entretien->getValidationByType(EntretienProfessionnelConstant::VALIDATION_RESPONSABLE);
$hasValidationObservation   = $entretien->getValidations('ENTRETIEN_OBSERVATION');
$hasValidationHierarchie    = $entretien->getValidations('ENTRETIEN_HIERARCHIE');
$hasValidationAgent         = $entretien->getValidations('ENTRETIEN_AGENT');
?>

<h2 class="page-header-tab"> Validations </h2>

<?php echo $this->portenote('EntretienProfessionnelController::renseignerAction()>validations', '', []); ?>

<div>
    <h3 class="categorie"> Validation du responsable de l'entretien professionnel </h3>

    <?php if (!$dateOk) : ?>
        <?php echo $this->portenote('EntretienProfessionnelController::renseignerAction()validations:date_non_atteinte', '', []); ?>
    <?php endif; ?>

    <?php if ($validationResponsable !== null) : ?>
        <div class="row">
            <div class="col-md-8">
                <div class="alert alert-success">
                    <div class="col-md-5">
                        <strong><u>Validation responsable d'entretien effectuée.</u></strong>
                    </div>
                    <div class="col-md-7">
                        <dl class="dl-horizontal">
                            <dt> Validateur </dt>
                            <dd> <?php echo $validationResponsable->getHistoModificateur()->getDisplayName(); ?> </dd>
                            <dt> Date </dt>
                            <dd> <?php echo $validationResponsable->getHistoModification()->format('d/m/y à H:i:s'); ?> </dd>
                        </dl>
                    </div>
                    <br/>
                    <br/>
                </div>
            </div>
            <div class="pull-right">
                <?php if ($canValiderResponsable and $hasValidationObservation === []) : ?>
                        <a
                            <?php /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::revoquerValidationAction() */ ?>
                                href="<?php echo $this->url('entretien-professionnel/revoquer-validation', ['validation' => $validationResponsable->getId()], [], true); ?>"
                                class="btn btn-danger action"
                        >
                            <span class="icon validation-undo"></span>
                            Révoquer la validation
                        </a>
                <?php endif; ?>
            </div>
        </div>
    <?php else : ?>
        <a
            <?php /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::validerElementAction() */ ?>
                href="<?php echo $this->url('entretien-professionnel/valider-element', ['entretien' => $entretien->getId(), 'type' => EntretienProfessionnelConstant::VALIDATION_RESPONSABLE], [], true); ?>"
                class="btn btn-success action ajax-modal"
                data-event="modification"
        >
            <span class="icon validation-do"></span>
            Validation du responsable
        </a>
    <?php endif; ?>
</div>

<div>
    <h3 class="categorie"> Expression des observations </h3>

    <?php if (!$dateOk) : ?>
        <?php echo $this->portenote('EntretienProfessionnelController::renseignerAction()validations:date_non_atteinte', '', []); ?>
    <?php endif; ?>

    <?php if ($hasValidationObservation) : ?>
        <?php $validationObservation = current($hasValidationObservation); ?>
        <div class="row">
            <div class="col-md-8">
                <div class="alert alert-success">
                    <div class="col-md-5">
                        <strong><u>Expression des observations faites.</u></strong>
                    </div>
                    <div class="col-md-7">
                        <dl class="dl-horizontal">
                            <dt> Validateur </dt>
                            <dd> <?php echo $validationObservation->getHistoModificateur()->getDisplayName(); ?> </dd>
                            <dt> Date </dt>
                            <dd> <?php echo $validationObservation->getHistoModification()->format('d/m/y à H:i:s'); ?> </dd>
                        </dl>
                    </div>
                    <br/>
                    <br/>
                </div>
            </div>
            <div class="pull-right">
                <?php if ($canValiderAgent and $hasValidationHierarchie === []) : ?>
                        <a
                            <?php /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::revoquerValidationAction() */ ?>
                                href="<?php echo $this->url('entretien-professionnel/revoquer-validation', ['validation' => $validationObservation->getId()], [], true); ?>"
                                class="btn btn-danger action"
                        >
                            <span class="icon validation-undo"></span>
                            Révoquer la validation
                        </a>
                <?php endif; ?>
            </div>
        </div>
    <?php else :?>
            <?php if ($hasValidationResponsable) : ?>
                <div class="alert alert-info">
                    Vous pouvez exprimer vos observations dans l'onglet <em>Observations</em> une fois que le responsable de l'entretien professionnel aura validé celui-ci.
                </div>
            <?php endif; ?>
    <?php endif; ?>
</div>


<div>
    <h3 class="categorie"> Validation du responsable hiérarchique </h3>

    <?php
        $now = new DateTime();
        $date = $entretien->getMaxSaisiObservation();
        $depasse = ($date === null OR $date < $now);
    ?>

    <?php if ($hasValidationObservation === [] OR !$depasse) : ?>
        <?php echo $this->portenote('EntretienProfessionnelController::renseignerAction()validations:pas_de_validation_agent', '', []); ?>
    <?php endif; ?>



    <?php if ($hasValidationHierarchie) : ?>
        <?php $validationHierarchie = current($hasValidationHierarchie); ?>
        <div class="row">
            <div class="col-md-8">
                <div class="alert alert-success">
                    <div class="col-md-5">
                        <strong><u>Validation du responsable hiérarchique effectuée.</u></strong>
                    </div>
                    <div class="col-md-7">
                        <dl class="dl-horizontal">
                            <dt> Validateur </dt>
                            <dd> <?php echo $validationHierarchie->getHistoModificateur()->getDisplayName(); ?> </dd>
                            <dt> Date </dt>
                            <dd> <?php echo $validationHierarchie->getHistoModification()->format('d/m/y à H:i:s'); ?> </dd>
                        </dl>
                    </div>
                    <br/>
                    <br/>
                </div>
            </div>
            <div class="pull-right">
                <?php if ($canValiderDrh and $hasValidationAgent === []) : ?>
                    <a
                        <?php /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::revoquerValidationAction() */ ?>
                            href="<?php echo $this->url('entretien-professionnel/revoquer-validation', ['validation' => $validationHierarchie->getId()], [], true); ?>"
                            class="btn btn-danger action"
                    >
                        <span class="icon validation-undo"></span>
                        Révoquer la validation
                    </a>
                <?php endif; ?>
            </div>
        </div>
    <?php else : ?>
        <?php if ($hasValidationObservation !== [] OR $depasse) : ?>
            <a
                <?php /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::validerElementAction() */ ?>
                    href="<?php echo $this->url('entretien-professionnel/valider-element', ['entretien' => $entretien->getId(), 'type' => EntretienProfessionnelConstant::VALIDATION_DRH], [], true); ?>"
                    class="btn btn-success action ajax-modal"
                    data-event="modification"
            >
                <span class="icon validation-do"></span>
                Validation du responsable
            </a>
        <?php endif; ?>
    <?php endif; ?>
</div>

<div>
    <h3 class="categorie"> Validation de l'agent </h3>

    <?php if (!$hasValidationAgent) : ?>
        <?php echo $this->portenote('EntretienProfessionnelController::renseignerAction()validations:reclamations', '', []); ?>
    <?php endif; ?>

    <?php if ($hasValidationAgent) : ?>
        <?php $validationAgent = current($hasValidationAgent); ?>
        <div class="row">
            <div class="col-md-8">
                <div class="alert alert-success">
                    <div class="col-md-5">
                        <strong><u>Validation du responsable hiérarchique effectuée.</u></strong>
                    </div>
                    <div class="col-md-7">
                        <dl class="dl-horizontal">
                            <dt> Validateur </dt>
                            <dd> <?php echo $validationAgent->getHistoModificateur()->getDisplayName(); ?> </dd>
                            <dt> Date </dt>
                            <dd> <?php echo $validationAgent->getHistoModification()->format('d/m/y à H:i:s'); ?> </dd>
                        </dl>
                    </div>
                    <br/>
                    <br/>
                </div>
            </div>
            <div class="pull-right">
                <?php if ($canValiderAgent) : ?>
                    <a
                        <?php /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::revoquerValidationAction() */ ?>
                            href="<?php echo $this->url('entretien-professionnel/revoquer-validation', ['validation' => $validationAgent->getId()], [], true); ?>"
                            class="btn btn-danger action"
                    >
                        <span class="icon validation-undo"></span>
                        Révoquer la validation
                    </a>
                <?php endif; ?>
            </div>
        </div>
    <?php else : ?>
        <?php if ($hasValidationHierarchie !== []) : ?>
            <a
                <?php /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::validerElementAction() */ ?>
                    href="<?php echo $this->url('entretien-professionnel/valider-element', ['entretien' => $entretien->getId(), 'type' => EntretienProfessionnelConstant::VALIDATION_AGENT], [], true); ?>"
                    class="btn btn-success action ajax-modal"
                    data-event="modification"
            >
                <span class="icon validation-do"></span>
                Validation de l'agent
            </a>
        <?php endif; ?>
    <?php endif; ?>
</div>

<style>
    h3.categorie {
        border-bottom: 1px solid #31708f;
    }
</style>