<?php

use EntretienProfessionnel\Entity\Db\EntretienProfessionnel;
use EntretienProfessionnel\Provider\Privilege\EntretienproPrivileges;
use EntretienProfessionnel\Provider\Validation\EntretienProfessionnelValidations;

/**
 * @see \EntretienProfessionnel\View\Helper\EntretienProfessionnelArrayViewHelper
 * @var EntretienProfessionnel[] $entretiens
 * @var array $options
 */

$isEnCours = (!empty($entretiens) && current($entretiens)->getCampagne()->estEnCours());

$dropdowns = false;

// recuperation des données à afficher
$displayAnnee = true;
if (isset($options['affichages']) AND isset($options['affichages']['annee']))       $displayAnnee = $options['affichages']['annee'];
$displayStructure = true;
if (isset($options['affichages']) AND isset($options['affichages']['structure']))   $displayStructure = $options['affichages']['structure'];
$displayAgent = true;
if (isset($options['affichages']) AND isset($options['affichages']['agent']))       $displayAgent = $options['affichages']['agent'];
$displayResponsable = true;
if (isset($options['affichages']) AND isset($options['affichages']['responsable'])) $displayResponsable = $options['affichages']['responsable'];
$displayDate = true;
if (isset($options['affichages']) AND isset($options['affichages']['date']))        $displayDate = $options['affichages']['date'];
$displayLieu = true;
if (isset($options['affichages']) AND isset($options['affichages']['lieu']))        $displayLieu = $options['affichages']['lieu'];
$displayEtat = true;
if (isset($options['affichages']) AND isset($options['affichages']['etat']))        $displayEtat = $options['affichages']['etat'];
$displayAction = true;
if (isset($options['affichages']) AND isset($options['affichages']['action']))      $displayAction = $options['affichages']['action'];

// recuperation des droits pour les actions
$canAcceder  = false;
if (!isset($options['droits']) OR !isset($options['droits']['acceder'])) {
    $canAcceder = $this->isAllowed(EntretienproPrivileges::getResourceId(EntretienproPrivileges::ENTRETIENPRO_AFFICHER));
} else {
    $canAcceder = $options['droits']['acceder'];
}
$canExporter  = false;
if (!isset($options['droits']) OR !isset($options['droits']['exporter'])) {
    $canExporter = $this->isAllowed(EntretienproPrivileges::getResourceId(EntretienproPrivileges::ENTRETIENPRO_AFFICHER));
} else {
    $canExporter = $options['droits']['exporter'];
}
$canModifier  = false;
if (!isset($options['droits']) OR !isset($options['droits']['modifier'])) {
    $canModifier = ($isEnCours AND $this->isAllowed(EntretienproPrivileges::getResourceId(EntretienproPrivileges::ENTRETIENPRO_MODIFIER)));
} else {
    $canModifier = $options['droits']['modifier'];
}
$canRenseigner  = false;
if (!isset($options['droits']) OR !isset($options['droits']['renseigner'])) {
    $canRenseigner = $this->isAllowed(EntretienproPrivileges::getResourceId(EntretienproPrivileges::ENTRETIENPRO_MODIFIER));
} else {
    $canRenseigner = $options['droits']['renseigner'];
}
$canHistoriser  = false;
if (!isset($options['droits']) OR !isset($options['droits']['historiser'])) {
    $canHistoriser = ($isEnCours AND $this->isAllowed(EntretienproPrivileges::getResourceId(EntretienproPrivileges::ENTRETIENPRO_HISTORISER)));
} else {
    $canHistoriser = $options['droits']['historiser'];
}
$canSupprimer  = false;
if (!isset($options['droits']) OR !isset($options['droits']['supprimer'])) {
    $canSupprimer = ($isEnCours AND $this->isAllowed(EntretienproPrivileges::getResourceId(EntretienproPrivileges::ENTRETIENPRO_DETRUIRE)));
} else {
    $canSupprimer = $options['droits']['supprimer'];
}

$width = '22rem';
if (isset($options['affichages']) AND isset($options['affichages']['width'])) $width = $options['affichages']['width'];

?>

<table class="table table-condensed table-hover datatable" id="<?php echo $options['id']; ?>" style="margin:1rem 0;">
    <thead>
    <tr>
        <?php if ($displayAnnee) : ?>
            <th class="col-md-1"> Année </th>
        <?php endif; ?>
        <?php if ($displayAgent) : ?>
            <th class="col-md-2"> Agent </th>
        <?php endif; ?>
        <?php if ($displayResponsable) : ?>
            <th class="col-md-2"> Responsable </th>
        <?php endif; ?>
        <?php if ($displayStructure) : ?>
            <th class="col-md-2"> Structure </th>
        <?php endif; ?>
        <?php if ($displayDate OR $displayLieu) : ?>
            <th data-type="num" class="col-md-2">
                <?php if ($displayDate): ?>Date<?php endif; ?>
                <?php if ($displayDate AND $displayLieu): ?> et <?php endif; ?>
                <?php if ($displayLieu): ?>Lieu<?php endif; ?>

            </th>
        <?php endif; ?>
        <?php if ($displayEtat) : ?>
            <th data-type="num" class="col-md-3"> État </th>
        <?php endif; ?>
        <?php if ($displayAction) : ?>
            <th class="action col-md-2"> Action </th>
        <?php endif; ?>
    </tr>
    </thead>
    <tbody>
    <?php foreach ($entretiens as $entretien) : ?>
        <?php
        //todo l'assertion merde
//        $canConvoquer = $this->isAllowed($entretien, EntretienproPrivileges::ENTRETIENPRO_CONVOQUER);
        $canConvoquer = (
                ($entretien->getValidationActiveByTypeCode(EntretienProfessionnelValidations::VALIDATION_RESPONSABLE) === null)
             && $this->isAllowed(EntretienproPrivileges::getResourceId(EntretienproPrivileges::ENTRETIENPRO_CONVOQUER)));
        ?>
    <tr>
        <?php if ($displayAnnee) : ?>
            <td>
                <?php echo ($entretien->getCampagne())?$entretien->getCampagne()->getAnnee():"Sans campagne"; ?>
            </td>
        <?php endif; ?>
        <?php if ($displayAgent) : ?>
            <td  data-order="<?php echo $entretien->getAgent()->getDenomination(); ?>"> <?php echo $entretien->getAgent()->getDenomination(false, true, true); ?> </td>
        <?php endif; ?>
        <?php if ($displayResponsable) : ?>
            <td data-order="<?php echo $entretien->getResponsable()->getDenomination(); ?>"> <?php echo $entretien->getResponsable()->getDenomination(false, true, true); ?> </td>
        <?php endif; ?>
        <?php if ($displayStructure) : ?>
            <td>
                <?php $affectations = $entretien->getAgent()->getAffectations($entretien->getDateEntretien()); ?>
                <?php if ($affectations !== null and !empty($affectations)) : ?>
                    <?php $first = true; ?>
                    <?php foreach ($affectations as $affectation) : ?>
                        <?php if (!$first) echo '<br/>'; else $first = false; ?>
                        <?php echo $affectation->getStructure()->getLibelleCourt(); ?>
                    <?php endforeach; ?>
                <?php else : ?>
                    Aucune structure
                <?php endif; ?>
            </td>
        <?php endif; ?>
        <?php if ($displayDate OR $displayLieu) : ?>
            <td data-order="<?php echo $entretien->getDateEntretien()->getTimestamp(); ?>">
                <?php if ($displayDate) : ?>
                    <?php echo $entretien->getDateEntretien()->format('d/m/Y H:i'); ?>
                <?php endif; ?>
                <?php if ($displayLieu) : ?>
                    <?php if ($displayDate): ?> <br> <?php endif; ?>
                    <?php echo $entretien->getLieu(); ?>
                <?php endif; ?>
            </td>
        <?php endif; ?>
        <?php if ($displayEtat) : ?>
            <td data-order="<?php echo ($entretien->getEtatActif())?$entretien->getEtatActif()->getType()->getOrdre():9999; ?>">
                <?php echo $this->etatinstance($entretien->getEtatActif(), ['display-categorie' => false, 'display-libelle' => true]); ?>
            </td>
        <?php endif; ?>
        <?php if ($displayAction) : ?>
        <td class="action">
            <?php if ($canAcceder AND $this->isAllowed($entretien, EntretienproPrivileges::ENTRETIENPRO_AFFICHER)  and !$dropdowns) : ?>
                <a
                    <?php /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::accederAction() */?>
                        href="<?php echo $this->url('entretien-professionnel/acceder', ['entretien-professionnel' => $entretien->getId()], [], true) ?>"
                        class='action secondary'
                >
                    <span class="icon icon-voir"></span>
                    Accéder
                </a>
            <?php endif; ?>
            <?php if ($canExporter AND $this->isAllowed($entretien, EntretienproPrivileges::ENTRETIENPRO_EXPORTER)  and !$dropdowns) : ?>
                <br>
                <a
                    <?php /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::exporterCrepAction() */?>
                    href="<?php echo $this->url('entretien-professionnel/exporter-crep', ['entretien' => $entretien->getId()], [], true) ?>"
                    class="action secondary"
                >
                    <span class="icon icon-pdf" title="Exporter le compte-rendu d'entretien professionnel ">
<!--                        <span class="small-lettrine">CREP</span> -->
                        Exporter CREP
                </a>
                <br>
                <a
                    <?php /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::exporterCrefAction() */?>
                        href="<?php echo $this->url('entretien-professionnel/exporter-cref', ['entretien' => $entretien->getId()], [], true) ?>"
                        class="action secondary"
                >
                    <span class="icon icon-pdf" title="Exporter  le compte-rendu d'entretien de formation">
<!--                        <span class="small-lettrine">CREF</span>-->
                        Exporter CREF
                </a>
            <?php endif; ?>
            <?php if ($canConvoquer  and !$dropdowns) : ?>
                <br>
                <a
                    <?php /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::modifierAction() */?>
                    href="<?php echo $this->url('entretien-professionnel/modifier', ['entretien' => $entretien->getId()], [], true); ?>"
                    class="ajax-modal action primary" data-event="modification"
                >
                    <span class="icon icon-gerer" title="Modifier l'entretien professionnel (convocation)"></span>
                    Gérer
                </a>
            <?php endif; ?>
            <?php if ($canHistoriser  and !$dropdowns) : ?>
                <br>
                <?php if ($entretien->estNonHistorise()) : ?>
                    <a
                        <?php /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::historiserAction() */?>
                        href="<?php echo $this->url('entretien-professionnel/historiser',
                            ['entretien' => $entretien->getId()],
                            ['query' => ['retour' => $this->url(null,[],['force_canonical' => true], true)]],
                            true); ?>"
                        class="ajax-modal action warning" data-event="modification"
                    >
                        <span class="icon icon-historiser" title="Historiser le compte-rendu de l'entretien professionnel"></span>
                        Historiser
                    </a>
                <?php else : ?>
                    <a
                        <?php /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::restaurerAction() */?>
                        href="<?php echo $this->url('entretien-professionnel/restaurer',
                            ['entretien' => $entretien->getId()],
                            ['query' => ['retour' => $this->url(null,[],['force_canonical' => true], true)]],
                            true); ?>"
                        class="action warning"
                    >
                        <span class="icon icon-restaurer" title="Restaurer le compte-rendu de l'entretien professionnel"></span>
                        Restaurer
                    </a>
                <?php endif; ?>
            <?php endif; ?>

            <?php if ($canSupprimer and !$dropdowns) : ?>
                <br>
                <a
                    <?php /** @see \EntretienProfessionnel\Controller\EntretienProfessionnelController::detruireAction() */?>
                    href="<?php echo $this->url('entretien-professionnel/detruire', ['entretien' => $entretien->getId()], [], true); ?>"
                    class="ajax-modal action danger"
                    data-event="modification"
                >
                    <span class="text-danger">
                        <span class="icon icon-unchecked" title="Supprimer définitivement le compte-rendu de l'entretien professionnel"></span>
                        Supprimer
                    </span>
                </a>
            <?php endif; ?>
            <?php if ($dropdowns) : ?>
<!--                <div class="dropdown action-dd">-->
<!--                    <button class="btn btn-default dropdown-toggle"-->
<!--                            type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"-->
<!--                            onclick="alert('clicked');  setActions(--><?php //echo $entretien->getId(); ?>//)">
//                        <span class="icon actions" title="Actions possible pour l'entretien #<?php //echo $entretien->getId(); ?><!--"></span>-->
<!--                    </button>-->
<!--                    <ul id="drop_--><?php //echo $entretien->getId(); ?><!--" class="dropdown-menu" aria-labelledby="dropdownMenu1">-->
<!--                    </ul>-->

<!--                </div>-->
                <a href="<?php echo $this->url('entretien-professionnel/action', ['entretien-professionnel' => $entretien->getId()], [], true); ?>" class="ajax-modal"
                   >
                    Action
                </a>
            <?php endif; ?>
        </td>
        <?php endif; ?>
    </tr>
    <?php endforeach; ?>
    </tbody>
</table>


<style>
    div.action-dd button {
        border: none;
        color: rgb(51, 122, 183);
        width:50px;
        margin: 0;
    }
</style>

<script>
    $("body").on("modification", function (event) {
        event.div.modal('hide');
        window.location.reload();
    });

    $(function() {
        $("table#<?php echo $options['id']; ?>").DataTable( {
            'autoWidth' : false,
            'paging' : false,
            'searching' : true,
            'info' : false,
            <?php if ($displayAnnee) : ?>
                'order': [[0, 'desc']],
            <?php endif; ?>
            language: {
                url: '/js/datatables_fr.json'
            },
        });
    });

    function setActions(id) {
        let url = '../../../../entretien-professionnel/action/' + id;
        // console.log(url);
        $.ajax({
            type: "POST",
            url: url,
            beforeSend:
                function () {
                    let date = new Date();
                    $("ul#drop_"+id).html(date.getMinutes() +":" + date.getSeconds() + "." + date.getMilliseconds()+  "<center><span class='icon hourglass'></span> Calcul en cours</center>");
                },
            success:
                function (retour) {
                    $("ul#drop_"+id).html($("ul#drop_"+id).html() + retour);
                }
        });
        // alert(ficheId);
    }
    document.addEventListener('DOMContentLoaded', function () {
        const button = document.getElementById('myPopoverButton');

        // Initialisation du popover
        const popover = new bootstrap.Popover(button, {
            content: 'Chargement en cours...', // Contenu initial
            trigger: 'click', // Le popover s'affiche au clic
        });

        // Gestionnaire d'événement au clic
        button.addEventListener('click', function () {
            // URL de l'API ou ressource
            const url = 'https://api.example.com/data';

            // Requête AJAX
            fetch(url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Erreur réseau');
                    }
                    return response.text(); // Ou response.json() selon le format attendu
                })
                .then(data => {
                    // Mise à jour dynamique du contenu du popover
                    popover.setContent({ content: data });
                })
                .catch(error => {
                    console.error('Erreur lors de la récupération des données:', error);
                    popover.setContent({ content: 'Erreur lors du chargement des données.' });
                });
        });
    });
</script>
