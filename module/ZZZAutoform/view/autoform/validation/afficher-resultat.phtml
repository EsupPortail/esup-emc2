<?php

// NB : sera ouvert en modal ne pas s'embÃªter avec les titres et le reste

/**
 * @see \Autoform\Controller\ValidationController::afficherResultatAction()
 * @var Formulaire $formulaire
 * @var Validation $validation
 * @var FormulaireReponse[] $fReponses
 * @var ValidationReponse[] $vReponses
 */

use Autoform\Entity\Db\Categorie;
use Autoform\Entity\Db\Champ;
use Autoform\Entity\Db\Formulaire;
use Autoform\Entity\Db\FormulaireReponse;
use Autoform\Entity\Db\Validation;
use Autoform\Entity\Db\ValidationReponse;

?>

<?php
    /** @var Categorie[] $categories */
    $categories = $formulaire->getCategories();
    $categories = array_filter($categories, function (Categorie $categorie) { return $categorie->estNonHistorise();});
    usort($categories, function (Categorie $a, Categorie $b) { return $a->getOrdre() - $b->getOrdre();});
?>

<div class="main">
<?php if ($validation->getTypeValidation() === 'listing') : ?>
    <?php foreach ($categories as $categorie) : ?>

        <?php
            /** @var Champ[] $champs */
            $champs = $categorie->getChamps();
            $champs = array_filter($champs, function (Champ $champ) { return $champ->estNonHistorise();});
            usort($champs, function (Champ $a, Champ $b) { return $a->getOrdre() - $b->getOrdre();});

            $results = [];
            foreach ($champs as $champ) {
                $fReponse = isset($fReponses[$champ->getId()])?$fReponses[$champ->getId()]->getReponse():null;
                $vReponse = isset($vReponses[$champ->getId()])?$vReponses[$champ->getId()]->getValue():null;
                if ($fReponse && $vReponse) $results[$champ->getId()] = $fReponses[$champ->getId()];
            }
        ?>

        <?php if (!empty($champs) && !empty($results)) : ?>

            <h3> <?php echo $categorie->getLibelle(); ?> </h3>

            <?php foreach ($champs as $champ) : ?>
                <?php if (isset($results[$champ->getId()])) : ?>
                    <?php
                        switch($champ->getElement()) {
                            case Champ::TYPE_MULTIPLE :
                                echo $this->champAsResult()->render($champ, $vReponses[$champ->getId()]->getValue());
                                break;
                            default :
                                echo $this->champAsResult()->render($champ, $fReponses[$champ->getId()]->getReponse());
                                break;
                        }
                    ?>
                <?php endif; ?>
            <?php endforeach; ?>
        <?php endif; ?>
    <?php endforeach; ?>
<?php else : ?>
    <?php
        echo $this->instanceAsDiv()->render($validation->getReference());
    ?>
<?php endif; ?>
</div>