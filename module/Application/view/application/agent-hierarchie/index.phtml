<?php

/** @see \Application\Controller\AgentHierarchieController::indexAction() */

use Application\Entity\Db\Agent;

$this->headTitle("Gestion des chaînes hiérarchiques");
?>

<h1 class="page-header">
    Gestion des chaînes hiérarchiques
</h1>

<h2> Extraction des chaînes hiérarchiques </h2>

Extraction des chaînes hiérarchiques courrantes au format .csv avec :
<ul>
    <li>pour les supérieurs : <code>'agent', 'superieur', 'debut', 'fin'</code></li>
    <li>pour les autoritéss : <code>'agent', 'autorite', 'debut', 'fin'</code></li>
</ul>


<?php /** @see \Application\Controller\AgentHierarchieController::exporterChainesAction() */ ?>
<a href="<?php echo $this->url('agent/hierarchie/exporter-chaines', ['type' => 'superieur'], [], true); ?>"
   class="btn btn-primary"
>
    <span class="icon icon-csv"></span>
    Exporter les supérieur·es
</a>

<?php /** @see \Application\Controller\AgentHierarchieController::exporterChainesAction() */ ?>
<a href="<?php echo $this->url('agent/hierarchie/exporter-chaines', ['type' => 'autorite'], [], true); ?>"
   class="btn btn-primary"
>
    <span class="icon icon-csv"></span>
    Exporter les autorités
</a>

<h2> Importation des chaînes </h2>

<h3> Importation depuis un csv</h3>


Le format du CSV exploité est le suivant :
<code>agent_id ; reponsable_id ; date_debut; date_fin</code>. <br/>
Un·e agent·e peut avoir plusieurs lignes dans ce fichier si plusieurs responsables sont lié·es.

<div class="alert alert-warning">
    Tous les agent·es listé·es dans le fichier CSV verront leur chaîne hiérarchique historisée.
</div>

<?php /** @see \Application\Controller\AgentHierarchieController::importerAction() */ ?>
<a href="<?php echo $this->url('agent/hierarchie/importer', ['type' => Agent::ROLE_SUPERIEURE], [], true); ?>"
   class="btn btn-primary ajax-modal"
>
    Importer les supérieur·es depuis csv
</a>

<?php /** @see \Application\Controller\AgentHierarchieController::importerAction() */ ?>
<a href="<?php echo $this->url('agent/hierarchie/importer', ['type' => Agent::ROLE_AUTORITE], [], true); ?>"
   class="btn btn-primary ajax-modal"
>
    Importer les autorités depuis csv
</a>

<h3> Calcul des chaînes </h3>

Le calcul se fait à partir d'une structure et détermine pour chaque agent·e affecté·e ses supérieur·es et autorités hiérarchiques.
Les règles exploitées sont les suivantes :
<ul>
    <li>Les supérieur·es sont les responsables de la structure la plus proche de l'agent·e.</li>
    <li> Les autorités sont les responsables de la structure de niveau 2 de l'agent
        (ou de niveau 1 si les supérieur·es sont les responsables de la structure de niveau 2).
    </li>
</ul>
<div class="alert alert-warning">
    Tous les agent·es de la structure verront leur chaîne hiérarchique historisée.
</div>

<?php /** @see \Application\Controller\AgentHierarchieController::calculerAction() */ ?>
<a href="<?php echo $this->url('agent/hierarchie/calculer', ['type' => Agent::ROLE_SUPERIEURE], [], true); ?>"
   class="btn btn-primary ajax-modal"
>
    Calculer les supérieur·es depuis la structure
</a>

<?php /** @see \Application\Controller\AgentHierarchieController::calculerAction() */ ?>
<a href="<?php echo $this->url('agent/hierarchie/calculer', ['type' => Agent::ROLE_AUTORITE], [], true); ?>"
   class="btn btn-primary ajax-modal"
>
    Calculer les autorités depuis la structure
</a>


<h4> Saisie manuelle pour un·e agent </h4>

<p>
    La saisie manuelle est aussi réalisable depuis la fiche de l'agent.
</p>

<?php /** @see \Application\Controller\AgentHierarchieController::ajouterAction() */ ?>
<a href="<?php echo $this->url('agent/hierarchie/ajouter', ['type' => 'superieur'], [], true); ?>"
   class="btn btn-primary ajax-modal"
>
    Saisie pour un·e agent d'un·e supérieur·e
</a>

<?php /** @see \Application\Controller\AgentHierarchieController::ajouterAction() */ ?>
<a href="<?php echo $this->url('agent/hierarchie/ajouter', ['type' => 'autorite'], [], true); ?>"
   class="btn btn-primary ajax-modal"
>
    Saisie pour un·e agent d'un·e autorité
</a>

<script>
    $(function () {
        $("body").on("modification", function (event) {
            event.div.modal('hide');
            window.location.reload();
        });
    });
</script>

<style>
    h3 {
        margin-top: 1rem;
    }
</style>