<?php

/**
 * @var Agent $agent
 * @var User $user
 * @var FichePoste $fiche
 * @var AgentMissionSpecifique[] $missions
 */

use Application\Controller\AgentController;
use Application\Entity\Db\Agent;
use Application\Entity\Db\AgentMissionSpecifique;
use Application\Entity\Db\Competence;
use Application\Entity\Db\FichePoste;
use Application\Entity\Db\FicheTypeExterne;
use Utilisateur\Entity\Db\User;

$this->headTitle('Accueil de '.$user->getDisplayName());


$canVoirFichePoste     = true;
$canExporterFichePoste = true;
$canVoirFicheSigner    = true;
$canVoirCompetence     = true;
$canAjouterCompetence  = true;
$canDetruireCompetence = true;

$competences = $agent->getCompetences();

?>

<h1 class="page-header">
    Accueil de <?php echo $user->getDisplayName(); ?>
</h1>

<div class="main">
    <?php if ($agent !== null) : ?>
        <div class="alert alert-success">
            Votre compte est bien associé à un agent.
        </div>
    <?php else : ?>
        <div class="alert alert-warning">
            Votre compte n'est pas associé à un agent.
        </div>
    <?php endif; ?>


<p class="lead">
    Cette page d'accueil vous permet de :
    <ul>
        <li> consulter les entretiens professionnels que vous avez passés et de valider ceux-ci lors de leur passage ; </li>
        <li> mettre en ligne des fichiers associés à votre carrière (CV, lettre de motivation, justificatif de formation, ...) ; </li>
        <li> lister les données vous concernant que l'application PrEECoG stocke.</li>
    </ul>
</p>

    <div class="col-md-4">
    <?php if ($agent !== null) : ?>
        <a href="<?php echo $this->url('agent/entretien-professionnel', ['agent' => $agent->getId()], [], true); ?>" class="btn btn-primary action">
            <span class="icon entretiens"></span>
            Consulter mes entretiens pro.
        </a>
    <?php endif; ?>
    </div>

    <div class="col-md-4">
    <?php if ($agent !== null) : ?>
        <a href="<?php echo $this->url('agent/fichiers', ['agent' => $agent->getId()], [], true); ?>" class="btn btn-primary action">
            <span class="icon fichiers"></span>
            Consulter mes fichiers en ligne
        </a>
    <?php endif; ?>
    </div>

    <div class="col-md-4">
    <a href="" class="btn btn-primary action disabled">
        <span class="icon donnees"></span>
        Consulter mes données stockées
    </a>
    </div>

    <br/>
    <br/>
</div>

<div class="main">
    <h2>Fiche de poste</h2>

    <?php if ($fiche !== null) : ?>
        <table class="table table-condensed">
            <thead>
            <tr>
                <th class="libelle-cell"> Poste </th>
                <th> Intitulé </th>
                <th> État </th>
                <th class="action-cell"> Action </th>
            </tr>
            </thead>
            <tbody>
                <tr>
                    <td> <?php echo ($fiche->getPoste())?$fiche->getPoste()->getNumeroPoste():"<span class='icon attention' style='color:darkred;'></span> Aucun poste"; ?> </td>
                    <td>
                        <?php echo ($fiche->getFicheTypeExternePrincipale())?$fiche->getFicheTypeExternePrincipale()->getFicheType()->getMetier()->getLibelle():"<span class='icon attention' style='color:darkred;'></span> Aucun fiche principale"; ?>
                        <?php if($fiche->getLibelle() !== null) : ?>
                            (<?php echo $fiche->getLibelle(); ?>)
                        <?php endif; ?>
                    </td>
                    <td> <span class="icon attention" style="color: darkred"></span>Non validée</td>
                    <td class="action-cell">
                        <?php if ($canVoirFichePoste) : ?>
                            <a href="<?php echo $this->url('fiche-poste/afficher', ['fiche-poste' => $fiche->getId()], [], true); ?>"
                               class="ajax-modal">
                                <span class="icon voir" title="Voir la fiche"></span></a>
                        <?php else : ?>
                            <span class="icon voir" style="color:lightgray;"></span>
                        <?php endif; ?>
                        <?php if ($canExporterFichePoste) : ?>
                            <a href="<?php echo $this->url('fiche-poste/export', ['fiche-poste' => $fiche->getId()], [], true); ?>"
                            >
                                <span class="icon pdf" title="Exporter la fiche"></span></a>
                        <?php else : ?>
                            <span class="icon pdf" style="color:lightgray;"></span>
                        <?php endif; ?>

                        <?php if ($canVoirFicheSigner) : ?>
                            <a href="">
                                <span class="icon ok" title="Valider la fiche de poste"></span></a>
                        <?php else: ?>
                        <?php endif; ?>
                    </td>
                </tr>
            </tbody>
        </table>
    <?php else : ?>
        Aucune fiche de poste.
    <?php endif; ?>
</div>

<div class="main">
    <h2>
        Missions spécifiques
        <span class="badge">
            <?php echo count($missions); ?>
        </span>
    </h2>

    <table class="table table-condensed">
        <thead>
        <tr>
            <th class="libelle-cell"> Missions </th>
            <th class="libelle-cell"> Structure </th>
            <th> Période</th>
            <th class="action-cell"> Action </th>
        </tr>
        </thead>
        <tbody>
        <?php foreach($missions as $missionSpecifique) : ?>
            <tr>
                <td> <?php echo $missionSpecifique->getMission()->getLibelle(); ?> </td>
                <td> <?php echo $missionSpecifique->getStructure()->getLibelleCourt(); ?> </td>
                <td>
                    <?php
                    $debut = ($missionSpecifique->getDateDebut())?$missionSpecifique->getDateDebut()->format('d/m/Y'):'---';
                    $fin   = ($missionSpecifique->getDateFin())?$missionSpecifique->getDateFin()->format('d/m/Y'):'---';
                    ?>
                    <?php echo $debut; ?> &rarr; <?php echo $fin; ?>
                </td>
                <td class="action-cell">
                </td>
            </tr>
        <?php endforeach; ?>
        </tbody>
    </table>
</div>

<div class="main">
    <div class="row">
        <div class="col-md-8">
        <h2>
            Compétences attachées à l'agent
            <span class="badge">
                <?php echo count($competences); ?>
            </span>
        </h2>
        </div>
        <div class="pull-right">
            <br/>
            <?php /** @see AgentController::ajouterAgentCompetenceAction() */ ?>
            <a href="<?php echo $this->url('agent/ajouter-agent-competence', ['agent' => $agent->getId()], [], true); ?>"
               class="btn btn-primary action ajax-modal"
               data-event="modification">
                <span class="icon ajouter"></span>
                Renseigner une compétence
            </a>
        </div>
    </div>

    <table class="table table-condensed">
        <thead>
            <tr>
                <th> Compétence </th>
                <th> Niveau </th>
                <th> Validation </th>
                <th> Action </th>
            </tr>
        </thead>
        <tbody>
            <?php foreach ($competences as $competence) : ?>
            <tr>
                <td> <?php echo $competence->getCompetence()->getLibelle(); ?> </td>
                <td> <?php echo $competence->getNiveau(); ?> </td>
                <td>
                    <?php if ($competence->getDate() !== null && $competence->getValidateur() !== null) : ?>
                        <small>
                            <?php echo $competence->getDate()->format('d/m/Y'); ?>
                            par <?php echo $competence->getValidateur()->getDisplayName(); ?>
                        </small>
                    <?php else : ?>
                            <span class="icon attention" style="color: darkred"></span> Pas de validation
                    <?php endif; ?>
                </td>
                <td>
                    <?php /** @see AgentController::afficherAgentCompetenceAction() */ ?>
                    <?php echo $this->actionIcon([
                        'icone' => "voir",
                        'titre' => "Voir la compétence d'agent",
                        'url' => $this->url('agent/afficher-agent-competence', ['agent-competence' => $competence->getId()], [], true),
                        'isAllowed' => $canVoirCompetence,
                        'class' => 'ajax-modal',
                     ]); ?>
                    <?php /** @see AgentController::modifierAgentCompetenceAction() */ ?>
                    <?php echo $this->actionIcon([
                        'icone' => "editer",
                        'titre' => "Modifier la compétence d'agent",
                        'url' => $this->url('agent/modifier-agent-competence', ['agent-competence' => $competence->getId()], [], true),
                        'isAllowed' => $canAjouterCompetence,
                        'class' => 'ajax-modal',
                        'event' => 'modification',
                    ]); ?>
                    <?php if ($competence->estNonHistorise()) : ?>
                        <?php /** @see AgentController::historiserAgentCompetenceAction() */ ?>
                        <?php echo $this->actionIcon([
                            'icone' => "historiser",
                            'titre' => "Historiser la compétence d'agent",
                            'url' => $this->url('agent/historiser-agent-competence', ['agent-competence' => $competence->getId()], [], true),
                            'isAllowed' => $canAjouterCompetence,
                        ]); ?>
                    <?php else : ?>
                        <?php /** @see AgentController::restaurerAgentCompetenceAction() */ ?>
                        <?php echo $this->actionIcon([
                            'icone' => "restaurer",
                            'titre' => "Restaurer la compétence d'agent",
                            'url' => $this->url('agent/restaurer-agent-competence', ['agent-competence' => $competence->getId()], [], true),
                            'isAllowed' => $canAjouterCompetence,
                        ]); ?>
                    <?php endif; ?>
                    <?php /** @see AgentController::detruireAgentCompetenceAction() */ ?>
                    <?php echo $this->actionIcon([
                        'icone' => "detruire",
                        'titre' => "Détruire la compétence d'agent",
                        'url' => $this->url('agent/detruire-agent-competence', ['agent-competence' => $competence->getId()], [], true),
                        'isAllowed' => $canDetruireCompetence,
                        'class' => 'ajax-modal',
                        'event' => 'modification',
                    ]); ?>
                </td>
            </tr>
            <?php endforeach; ?>
        </tbody>
    </table>

    <?php
    $dictionnaire = [];

    $fichePoste   = (!empty($agent->getFiches()))?current($agent->getFiches()):null;
    $fichesTypes  = ($fichePoste !== null)?$fichePoste->getFichesMetiers():[];
    /** @var  FicheTypeExterne $ficheType */
    foreach ($fichesTypes as $ficheType) {
        $ficheMetier = $ficheType->getFicheType();
        $competencesFM = $ficheMetier->getCompetences();
        /** @var Competence $competence */
        foreach ($competencesFM as $competence) {
            $type = $competence->getType()->getLibelle();
            $dictionnaire[$type][$competence->getLibelle()][] = 'fiche|'.$ficheType->getFicheType()->getMetier()->getLibelle();
        }

        $activites = $ficheMetier->getActivites();
        $activiteIds = explode(";",$ficheType->getActivites());
        foreach ($activites as $activite) {
            if (array_search($activite->getActivite()->getId(), $activiteIds) !== false) {
                $competencesFMA = $activite->getActivite()->getCompetences();
                foreach ($competencesFMA as $competence) {
                    $type = $competence->getType()->getLibelle();
                    $dictionnaire[$type][$competence->getLibelle()][] = 'activite|'.$activite->getActivite()->getLibelle();
                }
            }
        }
    }
    ?>
    <h2>
        Compétences provenant des fiches de poste
        <span class="badge"><?php echo count($dictionnaire); ?></span>
    </h2>

        <?php ksort($dictionnaire); ?>
        <?php foreach($dictionnaire as $type => $sub_dictionnaire) : ?>
            <h3>
                <?php echo $type; ?>
                <span class="badge"><?php echo count($sub_dictionnaire); ?></span>
            </h3>
            <ul>
            <?php foreach($sub_dictionnaire as $competence => $source) : ?>
                <li>
                    <?php echo $competence; ?>
                    <sup>
                        <?php foreach($source as $item) : ?>
                            <?php $split = explode('|', $item); ?>
                            <?php if($split[0] === 'fiche') : ?>
                                <span class="fiche-metier" title="Associée à la fiche métier [<?php echo $split[1]; ?>]">F</span>
                            <?php endif; ?>
                            <?php if($split[0] === 'activite') : ?>
                                <span class="activite" title="Associée à l'activité [<?php echo $split[1]; ?>]">A</span>
                            <?php endif; ?>
                        <?php endforeach; ?>
                    </sup>
                </li>
            <?php endforeach; ?>
            </ul>
        <?php endforeach; ?>

</div>


<style>
    span.fiche-metier span{
        position:absolute;
        text-decoration: none;

        margin-top:-25px;
        width:auto;
        height:auto;
        /*margin-left:-35px;*/
        /**/
        /*color:#09c;*/
        background:rgba(0,0,0,.9);
        padding:15px;
        border-radius:3px;
        box-shadow:0 0 2px rgba(0,0,0,.5);

        /*transform:scale(0) rotate(-12deg);*/
        /*transition:all .25s;*/

        opacity:0;
    }

    span.fiche-metier:hover span,span.fiche-metier:focus span {
        /*transform: scale(1) rotate(0);*/
        opacity:1;
    }

    th.agent-cell {
        width:25rem;
    }
    th.libelle-cell {
        width:25rem;
    }
    th.action-cell {
        width:10rem;
    }
    td.action-cell {
        text-align: right;
    }

    h2 {
        color: #3c6c8b;
        text-decoration: none;
    }

</style>

<script>
    $(document).ready(function() {
        $('#datatable').DataTable( {
            language: {
                url: '/localisation/fr_FR.json'
            }
        });
    } );

    $(function() {
        $("body").on("modification", function (event) {
            event.div.modal('hide');
            window.location.reload();
        });
    });
</script>
