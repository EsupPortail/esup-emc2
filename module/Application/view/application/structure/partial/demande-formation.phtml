<?php

use Formation\Entity\Db\FormationInstanceInscrit;
use Formation\Entity\Db\FormationInstanceJournee;

/**
 * @var FormationInstanceInscrit[] $inscriptions
 */

$canValiderResponsable = true;

$today = new DateTime();
$mini = (new DateTime())->sub(New DateInterval('P1Y'));
$maxi = (new DateTime())->add(New DateInterval('P1Y'));

$inscriptions = array_filter($inscriptions, function (FormationInstanceInscrit $inscription) use ($maxi, $mini) {
    if ($inscription->getInstance()->getDebut() === null) return false;
    /** @var FormationInstanceJournee $journee */
    foreach ($inscription->getInstance()->getJournees() as $journee) {
        $date = $journee->getJour();
        if ($date >= $mini AND $date <= $maxi) return true;
    }
    return false;
});

$array = [];
foreach ($inscriptions as $inscription) {
    $formation = $inscription->getInstance()->getFormation();
    $instance = $inscription->getInstance();
    $array[$formation->getId()]["formation"] = $formation;
    $array[$formation->getId()]["instances"][$instance->getId()]['instance'] = $instance;
    $array[$formation->getId()]["instances"][$instance->getId()]['inscriptions'][] = $inscription;
}

?>

<h2> Demandes de formations </h2>

<div class="description">
    <p class="description">Liste des inscriptions dans un intervalle de plus ou moins 1 an.</p>
</div>

<?php usort($array, function ($a,$b) { return $a['formation']->getLibelle() > $b['formation']->getLibelle();}); ?>
<?php foreach ($array as $item) : ?>
    <h3> <?php echo $item['formation']->getLibelle(); ?> </h3>
    <?php foreach($item['instances'] as $instance) : ?>
        <h4>Instance du <?php echo $instance['instance']->getDebut(); ?> au <?php echo $instance['instance']->getFin(); ?> (<?php echo $instance['instance']->getDuree(); ?> heures).</h4>
        <ul>
        <?php foreach ($instance['inscriptions'] as $inscription) : ?>
            <li>
                <?php echo $this->etatbadge($inscription->getEtat()); ?>
                <?php echo $inscription->getAgent()->getDenomination(); ?>
                <?php if ($canValiderResponsable AND $inscription->getEtat() !== null AND $inscription->getEtat()->getCode() === FormationInstanceInscrit::ETAT_DEMANDE_INSCRIPTION) : ?>
                    <a  <?php  /** @see \Formation\Controller\FormationInstanceInscritController::validerResponsableAction() */ ?>
                            href="<?php echo $this->url('formation-instance/valider-responsable', ['inscrit' => $inscription->getId()], [], true); ?>" class="ajax-modal" data-event="modification"> <span class="icon validation-do"> GÃ©rer la demande</a>
                <?php endif; ?>
            </li>
        <?php endforeach; ?>
        </ul>
    <?php endforeach; ?>
<?php endforeach; ?>
