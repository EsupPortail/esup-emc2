<?php

/**
 * @see \Formation\Controller\PlanDeFormationController::afficherAction()
 * @var PlanDeFormation $planDeFormation
 * @var Formation[] $actions
 * @var Domaine[] $domaines
 * @var array $actionsByDomaines
 * @var ActionCoutPrevisionnel[] $coutsPrevisionnels
 */

use Formation\Entity\Db\ActionCoutPrevisionnel;
use Formation\Entity\Db\Domaine;
use Formation\Entity\Db\Formation;
use Formation\Entity\Db\PlanDeFormation;
use Formation\Provider\Privilege\CoutprevisionnelPrivileges;
use Formation\Provider\Privilege\FormationabonnementPrivileges;use Formation\Provider\Privilege\FormationPrivileges;
use Formation\Provider\Privilege\PlanformationPrivileges;

$canIndex = $this->isAllowed(PlanformationPrivileges::getResourceId(PlanformationPrivileges::PLANFORMATION_INDEX));
$canAjouterFormation = $this->isAllowed(PlanformationPrivileges::getResourceId(PlanformationPrivileges::PLANFORMATION_MODIFIER));
$canReprendre = $this->isAllowed(PlanformationPrivileges::getResourceId(PlanformationPrivileges::PLANFORMATION_MODIFIER));

$canAfficherAction = $this->isAllowed(FormationPrivileges::getResourceId(FormationPrivileges::FORMATION_AFFICHER));
$canAfficherCout = $this->isAllowed(CoutprevisionnelPrivileges::getResourceId(CoutprevisionnelPrivileges::COUTPREVISIONNEL_AFFICHER));
$canListerParFormation = $this->isAllowed(FormationabonnementPrivileges::getResourceId(FormationabonnementPrivileges::FORMATIONABONNEMENT_LISTE_FORMATION));

usort($plansDeFormation, function (PlanDeFormation $a, PlanDeFormation $b) {
    return $a->getDateDebut() <=> $b->getDateDebut();
});
usort($domaines, function (Domaine $a, Domaine $b) {
    if ($a->getOrdre() === $b->getOrdre()) {
        return $a->getLibelle() <=> $b->getLibelle();
    }
    return $a->getOrdre() <=> $b->getOrdre();
});
?>

<h1 class="page-header">
    Plan de formation :
    <span class="highlight plan-de-formation">
        <?php echo $planDeFormation->getLibelle(); ?>
    </span>
</h1>

<?php if ($canReprendre): ?>
    <?php /** @see \Formation\Controller\PlanDeFormationController::reprendreAction() */ ?>
    <a href="<?php echo $this->url('plan-de-formation/reprendre', ['plan-de-formation' => $planDeFormation->getId()], ['force_canonical' => true], true); ?>"
       class="btn btn-primary ajax-modal" data-event="modification">
        Reprendre les formations d'un autre plan de formation
    </a>
<?php endif; ?>

<?php if ($canAjouterFormation): ?>
    <?php /** @see \Formation\Controller\PlanDeFormationController::gererFormationsAction() */ ?>
    <a href="<?php echo $this->url('plan-de-formation/gerer-formations', ['plan-de-formation' => $planDeFormation->getId()], ['force_canonical' => true], true); ?>"
       class="btn btn-primary ajax-modal" data-event="modification">
        Gérer les formations
    </a>
    <?php /** @see \Formation\Controller\PlanDeFormationController::importerDepuisCsvAction() */ ?>
    <a href="<?php echo $this->url('plan-de-formation/importer', ['plan-de-formation' => $planDeFormation->getId()], [], true); ?>"
       class="btn btn-primary">
        <span class="icon icon-csv"></span>
        Compléter un plan de formation avec un csv
    </a>
    <?php /** @see \Formation\Controller\PlanDeFormationController::viderAction() */ ?>
    <a href="<?php echo $this->url('plan-de-formation/vider', ['plan-de-formation' => $planDeFormation->getId()], [], true); ?>"
       class="btn btn-primary ajax-modal" data-event="modification">
        <span class="icon icon-gommer"></span>
        Vider le plan de formation
    </a>
<?php endif; ?>

<?php if ($canIndex): ?>
    <?php /** @see \Formation\Controller\PlanDeFormationController::indexAction() */ ?>
    <a href="<?php echo $this->url('plan-de-formation', [], ['force_canonical' => true], true); ?>"
       class="btn btn-secondary">
        <span class="icon icon-retour"></span>
        Retour à la liste des plans de formation
    </a>
<?php endif; ?>

<h2> Actions au plan de formations </h2>


<?php foreach ($domaines as $domaine) : ?>
    <span class="domaine" style="border-color: <?php echo $domaine->getCouleur(); ?>">
            <?php echo $domaine->getLibelle(); ?> (<?php echo count($actionsByDomaines[$domaine->getId()]); ?> actions de formation)
        </span>

    <?php
    $actions_ = $actionsByDomaines[$domaine->getId()];
    usort($actions_, function (Formation $a, Formation $b) {
        return $a->getLibelle() <=> $b->getLibelle();
    });
    ?>
    <ul>
        <?php foreach ($actions_ as $action) : ?>
            <li>
                <?php echo $action->getLibelle(); ?>
                (<?php echo count($actions[$action->getId()]->getSessionsOuvertes()); ?> session·s ouverte·s)
                <?php if ($canAfficherAction) : ?>
                    <?php /** @see \Formation\Controller\FormationController::editerAction() */ ?>
                        <a href="<?php echo $this->url("formation/editer", ["formation" => $action->getId()], [], true); ?>">
                            <span class="icon icon-voir"></span></a>
                <?php endif; ?>
                <?php if ($canListerParFormation) : ?>
                    <?php /** @see \Formation\Controller\AbonnementController::listerAbonnementsParFormationAction() */ ?>
                    <a href="<?php echo $this->url('formation/abonnement/lister-abonnements-par-formation', ['formation' => $action->getId()], [], true); ?>"
                       class="ajax-modal"
                    >
                        <span class="icon icon-listing" title="lister les abonnements pour cette formation"></span></a>
                <?php endif; ?>
            </li>
        <?php endforeach; ?>
    </ul>
<?php endforeach; ?>

<?php if ($canAfficherCout) : ?>
    <h2>Coûts prévisionnels </h2>

    <?php echo $this->coutsPrevisionnels($coutsPrevisionnels, null, $planDeFormation); ?>
<?php endif; ?>


<script>
    $(function () {
        $("body").on("modification", function (event) {
            event.div.modal('hide');
            window.location.reload();
        });
    });
</script>

<style>
    span.domaine {
        border-left: 1rem solid;
        border-bottom: 0.1rem solid;
        display: block;
        margin-bottom: 0.25rem;
        padding-left: 1rem;
        font-weight: bold;
        font-size: large;
    }

    span.highlight {
        font-family: monospace;
        font-weight: bold;
    }
</style>