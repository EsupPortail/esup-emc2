<?php

/**
 * @see \Formation\Controller\PlanDeFormationController::afficherAction()
 * @var PlanDeFormation $plan
 * @var Axe[] $axes
 * @var FormationGroupe[] $groupes
 * @var Formation[] $formations
 * @var FormationGroupe[] $groupesArrayByAxe @desc $axeId => FormationGroupe[]
 * @var Formation[] $formationsArrayByGroupe @desc $groupeId => Formation[]
 * @var Formation[] $sessionsArrayByFormation @desc $formationId => FormationInstance[]
 * @var ActionCoutPrevisionnel[] $coutsPrevisionnels
 */

use Formation\Entity\Db\ActionCoutPrevisionnel;
use Formation\Entity\Db\Axe;
use Formation\Entity\Db\Formation;
use Formation\Entity\Db\FormationGroupe;
use Formation\Entity\Db\PlanDeFormation;
use Formation\Provider\Privilege\CoutprevisionnelPrivileges;
use Formation\Provider\Privilege\FormationPrivileges;
use Formation\Provider\Privilege\PlanformationPrivileges;

$canIndex = $this->isAllowed(PlanformationPrivileges::getResourceId(PlanformationPrivileges::PLANFORMATION_INDEX));
$canAjouterFormation = $this->isAllowed(PlanformationPrivileges::getResourceId(PlanformationPrivileges::PLANFORMATION_MODIFIER));
$canReprendre = $this->isAllowed(PlanformationPrivileges::getResourceId(PlanformationPrivileges::PLANFORMATION_MODIFIER));

$canAfficherAction = $this->isAllowed(FormationPrivileges::getResourceId(FormationPrivileges::FORMATION_AFFICHER));
$canAfficherCout = $this->isAllowed(CoutprevisionnelPrivileges::getResourceId(CoutprevisionnelPrivileges::COUTPREVISIONNEL_AFFICHER));

usort($axes, function (Axe $a, Axe $b) {
    return $a->getOrdre() <=> $b->getOrdre();
});
?>

<h1 class="page-header">
    Plan de formation
    <span class="highlight plan-de-formation">
        <?php echo $plan->getAnnee(); ?>
    </span>
</h1>

<?php if ($canReprendre): ?>
    <?php /** @see \Formation\Controller\PlanDeFormationController::reprendreAction() */ ?>
    <a href="<?php echo $this->url('plan-de-formation/reprendre', ['plan-de-formation' => $plan->getId()], ['force_canonical' => true], true); ?>"
       class="btn btn-primary ajax-modal" data-event="modification">
        Reprendre les formations d'un autre plan de formation
    </a>
<?php endif; ?>

<?php if ($canAjouterFormation): ?>
    <?php /** @see \Formation\Controller\PlanDeFormationController::gererFormationsAction() */ ?>
    <a href="<?php echo $this->url('plan-de-formation/gerer-formations', ['plan-de-formation' => $plan->getId()], ['force_canonical' => true], true); ?>"
       class="btn btn-primary ajax-modal" data-event="modification">
        Gérer les formations
    </a>
    <?php /** @see \Formation\Controller\PlanDeFormationController::importerDepuisCsvAction() */ ?>
    <a href="<?php echo $this->url('plan-de-formation/importer', ['plan-de-formation' => $plan->getId()], [], true); ?>"
       class="btn btn-primary">
        <span class="icon icon-csv"></span>
        Compléter un plan de formation avec un csv
    </a>
    <?php /** @see \Formation\Controller\PlanDeFormationController::viderAction() */ ?>
    <a href="<?php echo $this->url('plan-de-formation/vider', ['plan-de-formation' => $plan->getId()], [], true); ?>"
       class="btn btn-primary ajax-modal" data-event="modification">
        <span class="icon icon-gommer"></span>
        Vider le plan de formation
    </a>
<?php endif; ?>

<?php if ($canIndex): ?>
    <?php /** @see \Formation\Controller\PlanDeFormationController::indexAction() */ ?>
    <a href="<?php echo $this->url('plan-de-formation', [], ['force_canonical' => true], true); ?>"
       class="btn btn-secondary">
        <span class="icon icon-retour"></span>
        Retour à la liste des plans de formation
    </a>
<?php endif; ?>

<h2> Formations dans le plan </h2>

<?php foreach ($axes as $axe) : ?>
    <span class="axe" style="border-color: <?php echo $axe->getCouleur(); ?>"><?php echo $axe->getLibelle(); ?></span>
    <ul>
        <?php foreach ($groupesArrayByAxe[$axe->getId()] as $groupe) : ?>
            <?php if ($groupe !== null) : ?>
                <li>
                    <span class="groupe"> <?php echo $groupe->getLibelle(); ?></span>
                    (<?php echo count($formationsArrayByGroupe[$groupe->getId()]); ?> formations)
                    <ul>
                        <?php /** @var Formation $formation */ ?>
                        <?php foreach ($formationsArrayByGroupe[$groupe->getId()] as $formation) : ?>
                            <li>
                                <?php if ($canAfficherAction) : ?>
                                    <?php /** @see \Formation\Controller\FormationController::afficherAction() */ ?>
                                    <a href="<?php echo $this->url("formation/afficher", ["formation" => $formation->getId()], [], true); ?>"
                                       class="ajax-modal">
                                        <span class="formation"> <?php echo $formation->getLibelle(); ?> </span>
                                    </a>
                                <?php else : ?>
                                    <span class="formation"> <?php echo $formation->getLibelle(); ?> </span>
                                <?php endif; ?>
                                <?php foreach ($formation->getDomaines() as $domaine) : ?>
                                    <span class="badge" style="background: <?php echo $domaine->getCouleur(); ?>"
                                          title="<?php echo $domaine->getLibelle(); ?>">&nbsp;</span>
                                <?php endforeach; ?>
                                (<?php echo count($sessionsArrayByFormation[$formation->getId()]); ?> sessions)
                            </li>
                        <?php endforeach; ?>
                    </ul>
                </li>
            <?php endif; ?>
        <?php endforeach; ?>
    </ul>
<?php endforeach; ?>

<?php if ($canAfficherCout) : ?>
    <h2>Coûts prévisionnels </h2>

    <?php echo $this->coutsPrevisionnels($coutsPrevisionnels, null, $plan); ?>
<?php endif; ?>


<script>
    $(function () {
        $("body").on("modification", function (event) {
            event.div.modal('hide');
            window.location.reload();
        });
    });
</script>

<style>
    span.axe {
        border-left: 1rem solid;
        border-bottom: 0.1rem solid;
        display: block;
        margin-bottom: 0.25rem;
        padding-left: 1rem;
        font-weight: bold;
        font-size: large;
    }
</style>