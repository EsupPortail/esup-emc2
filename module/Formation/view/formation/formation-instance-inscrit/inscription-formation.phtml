<?php

/**
 * @see \Formation\Controller\FormationInstanceInscritController::inscriptionFormationAction()
 * @var FormationInstance[] $instances
 * @var FormationInstanceInscrit[] $inscriptions
 * @var DemandeExterne[] $demandes
 * @var Agent $agent
 * @var array $superieures
 */

use Application\Entity\Db\Agent;
use Formation\Entity\Db\DemandeExterne;
use Formation\Entity\Db\FormationInstance;
use Formation\Entity\Db\FormationInstanceInscrit;

$this->headTitle("S'inscrire à une formation");

$superieuresTexte = "";
if (!empty($superieures)) {
    $superieuresTexte = "(".implode(', ', array_map(function (Agent $a) { return $a->getDenomination(); }, $superieures)) .")";
}
?>


<br/>

<h1 class="page-header"> S'inscrire à une formation </h1>

<div class="alert alert-info">
    <span class="icon icon-attention"></span>
    <strong>La demande d'inscription ne vaut pas acceptation.</strong>
    Votre inscription est soumise à validation et en fonction des places disponibles.
</div>


<ul class="nav">
    <li class="nav-item">
        <a class="nav-link" href="#instances" aria-controls="instances">
            Sessions de formation <br/> du plan de formation
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="#demandes" aria-controls="demandes">
            Stages extérieurs au <br/> plan de formation
        </a>
    </li>
</ul>

<div class="tab-content">

    <!-- Mission------------------------------------------------------------------------------------------->
    <div id="instances" class="tab-pane">
        <?php echo $this->partial('partial/instances', ['instances' => $instances, 'inscriptions' => $inscriptions, 'agent' => $agent]); ?>
    </div>

    <!-- Mission------------------------------------------------------------------------------------------->
    <div id="demandes" class="tab-pane">
        <?php echo $this->partial('partial/demandes-externes', ['agent' => $agent, 'demandes' => $demandes]); ?>
    </div>

</div>

<script>
    $(function() {
        $("body").on("modification", function (event) {
            event.div.modal('hide');
            tinyMCE.editors=[];
            window.location.reload();
        });
    });

    $(document).ready(function() {
        $('.datatable').DataTable( {
            sorting:false,
            paging:false,
            language: {
                url: '/localisation/fr_FR.json'
            }
        } );
    } );

    $(function() {
        let hash = $(location).attr('hash');
        let name = hash.substr(1);
        if (name === undefined || name === "") name = "instances";

        $('a[aria-controls=' + name + ']').tab('show');

        $('.nav a').click(function (e) {
            let anchor = $(this).attr('aria-controls');
            e.preventDefault(); // >> bloque le scrolling, mais aussi la ré-écriture de l'url "#info" ...
            history.replaceState(null, null, "#"+anchor);
            $(this).tab('show');
        });

        $("body").on("modification", function (event) {
            event.div.modal('hide');
            window.location.reload();
        });
    });
</script>