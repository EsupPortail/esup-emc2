<?php

/**
 * @see \Formation\Controller\InscriptionController::inscriptionAction()
 * @see \Formation\Controller\InscriptionController::desinscriptionAction()
 * @see \Formation\Controller\InscriptionController::validerResponsableAction()
 * @see \Formation\Controller\InscriptionController::refuserResponsableAction()
 * @see \Formation\Controller\InscriptionController::validerDrhAction()
 * @see \Formation\Controller\InscriptionController::refuserDrhAction()
 * @var Form $form
 * @var Inscription|DemandeExterne $inscription
 */

use Formation\Entity\Db\DemandeExterne;
use Formation\Entity\Db\Inscription;
use Laminas\Form\Form;

?>

<dl>
<?php if ($inscription->getJustificationAgent()) : ?>
    <dt> Missions en ad√©quation avec le demande de formation </dt>
    <dd> <?php echo $inscription->getMissions(); ?> </dd>
    <dt> Motivation de l'agent </dt>
    <dd> <?php echo $inscription->getJustificationAgent(); ?></dd>
<?php endif; ?>
<?php if ($inscription->getJustificationResponsable()) : ?>
    <dt> Motivation du responsable de l'agent </dt>
    <dd> <?php echo $inscription->getJustificationResponsable(); ?></dd>
<?php endif; ?>
<?php if ($inscription instanceof DemandeExterne AND $inscription->getJustificationGestionnaire()) : ?>
        <dt> Justification du bureau de gestion </dt>
        <dd> <?php echo $inscription->getJustificationGestionnaire(); ?></dd>
    <?php endif; ?>
<?php if ($inscription->getJustificationRefus()) : ?>
    <dt> Motif de refus </dt>
    <dd> <?php echo $inscription->getJustificationRefus(); ?></dd>
<?php endif; ?>
</dl>

<?php echo $this->form()->openTag($form); ?>
<?php echo $this->formControlGroup($form->get('etape')); ?>
<div style="<?php if ($inscription->getEtatActif() !== null) echo " display: none; "; ?>">
    <?php echo $this->formControlGroup($form->get('missions')); ?>
</div>
<?php echo $this->formControlGroup($form->get('justification')); ?>
<?php echo $this->formControlGroup($form->get('bouton')); ?>
<?php echo $this->form()->closeTag(); ?>

<script>
    $(document).ready(function() {
        tinymce.remove();
        tinymce.init({
            selector: '.type2',
            toolbar: 'newdocument undo redo | bold italic underline removeformat | bullist',
            resize: true,
            language: 'fr_FR',
            plugins: 'lists',
            statusbar: true,
            browser_spellcheck : true,
            branding: false,
            menu: {},
            body_id: 'description',
            setup: function (editor) {
                editor.on("focusout", function () {
                    console.log(tinymce.get('description').getContent());
                    $('textarea#description').val(tinymce.get('description').getContent());
                });
            }
        });
    });

    $('select').selectpicker();
</script>

<style>
    .ui-datepicker{
        position: absolute;
        z-index:1050 !important;
    }
    /*div.ui-datepicker {*/
    /*    position: absolute;*/
    /*     z-index:1050;*/
    /* }*/
    /* select.ui-datepicker-year option{*/
    /* position: absolute;*/
    /*     z-index:3151 !important;*/
    /* }*/
</style>