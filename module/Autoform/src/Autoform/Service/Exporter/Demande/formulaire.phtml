<?php
/**
 * @var \Autoform\Entity\Db\Formulaire $formulaire
 * @var \Autoform\Entity\Db\int[] $reponses
 */
?>

<?php
    //TODO unduplicate that shit
    /** @var \Autoform\Entity\Db\Categorie[] $categories */
    $categories = $formulaire->getCategories();
    $categories = array_filter($categories, function (\Autoform\Entity\Db\Categorie $categorie) { return $categorie->estNonHistorise();})
?>

<?php foreach ($categories as $categorie) : ?>
    <?php
    /** @var \Autoform\Entity\Db\Champ[] champs */
    $champs = $categorie->getChamps();
    $champs = array_filter($champs, function (\Autoform\Entity\Db\Champ $champ) { return $champ->estNonHistorise();});
    usort($champs, function (\Autoform\Entity\Db\Champ $a, \Autoform\Entity\Db\Champ $b) { return $a->getOrdre() - $b->getOrdre();});
    ?>

    <!-- champ non vide mais surtout reponse non vide ... -->
    <?php if (!empty($champs)) : ?>

        <?php
            $reponsesValides = [];
            foreach ($champs as $champ) {
                $reponse = $reponses[$champ->getId()];
                if ($reponse) {
                    $reponsesValides[$champ->getId()] = $reponse->getReponse();
                }
            }
        ?>
        <?php if (!empty($reponsesValides)) : ?>
            <div>
            <h2> <?php echo $categorie->getLibelle(); ?> </h2>
                <ul>
                <?php foreach ($champs as $champ) : ?>
                        <?php
                            if (isset($reponsesValides[$champ->getId()])) {
                                echo  $this->champAsResult()->render($champ, $reponsesValides[$champ->getId()]) ;
                            }
                        ?>
                <?php endforeach; ?>
                </ul>
            </div>
        <?php endif; ?>
    <?php endif; ?>

<?php endforeach; ?>
